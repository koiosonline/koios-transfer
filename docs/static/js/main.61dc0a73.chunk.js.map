{"version":3,"sources":["pages/Home.tsx","components/Web3.ts","components/Header.tsx","components/HandleNftInputs.ts","components/MintTokens.ts","pages/Mintnonfungible.tsx","components/HandleFtInputs.ts","components/TransferTokens.ts","pages/TransferfungibleRinkeby.tsx","pages/TransferFungibleDao.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Home","to","web3","Web3","givenProvider","LoadWeb3","a","window","ethereum","newChain","newActs","on","autoRefreshOnNetworkChange","alert","loadContractNFT","tokeninfo","chainId","eth","getChainId","Contract","mintBulkAbi","address","result","chainName","console","log","loadContractFT","transferBulkAbi","net","getId","networkId","getAccounts","acts","JSON","stringify","selectChain","param","request","method","params","Header","className","transferlist","addresslist","addElementsToList","addresses","split","i","length","trim","splice","entry","push","getTransferList","getAddressList","MintTokens","accounts","methods","mintBulk","send","from","error","Mintnonfungible","React","useState","valueaddresses","setAddressesValue","showTransferList","chain","setChain","contract","setContract","updateTransferList","updatedTransferList","useEffect","handleSubmitButton","FormControl","variant","InputLabel","Select","value","onChange","event","target","chainInfo","paramxDai","paramFantom","label","MenuItem","contractInfo","koiosTestNFTAttendance","koiosTestNFTPresenter","koiosAttendeeNFT","koiosPresenterNFT","TextField","fullWidth","onClick","map","users","index","amountlist","names","amount","getAmountList","TransferTokens","amounts","BigInt","parseInt","transferBulk","TransferFungibleRinkeby","valuenames","setNamesValue","valueamount","setAmountValue","token","setToken","TitanToken","T1tanToken","TransferFungibleArbitrum","KoiosTitanToken","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61dc0a73.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\r\n\r\nexport const Home = () => {\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h2>Koios</h2>\r\n      <Link to=\"/mintnonfungible\">Mint non fungible token</Link>\r\n      <p></p>\r\n      <Link to=\"/transferfungibleminor\">Transfer Minor Titan tokens</Link>\r\n      <p></p>\r\n      <Link to=\"/transferfungibledao\">Transfer Koios Dao tokens</Link>\r\n    </div>\r\n  );\r\n}","import Web3 from \"web3\";\r\nimport mintBulkAbi from \"../assets/static/mintBulk-abi.json\";\r\nimport transferBulkAbi from \"../assets/static/transferBulk-abi.json\";\r\nconst web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\r\n\r\nexport const LoadWeb3 = async () => {\r\n  if (window.ethereum) {\r\n    window.web3 = new Web3(window.ethereum);\r\n\r\n    await newChain();\r\n    await newActs();\r\n\r\n    window.ethereum.on('accountsChanged', newActs)\r\n    window.ethereum.on('chainChanged', newChain);\r\n    window.ethereum.on('networkChanged', newChain);  // depricated / still used in metamask mobile\r\n    window.ethereum.on('chainIdChanged', newChain);  // depricated / temp workaround\r\n    window.ethereum.autoRefreshOnNetworkChange = false; // temp workaround  // doesn't work on metamask mobile\r\n\r\n  } else {\r\n    window.alert(\"Metamask not detected!\");\r\n  }\r\n};\r\n\r\nconst contractABInft = () => {\r\n  const abi = mintBulkAbi;\r\n  return abi;\r\n};\r\n\r\nconst contractABIft = () => {\r\n  const abi = transferBulkAbi;\r\n  return abi;\r\n};\r\n\r\nexport const loadContractNFT = async (tokeninfo: any) => {\r\n  try {\r\n    if (tokeninfo.chainId === await window.web3.eth.getChainId()) {\r\n      const result = await new web3.eth.Contract(contractABInft() as any, tokeninfo.address);\r\n      window.mintBulkAbi = result;\r\n    }\r\n    else {\r\n      window.alert(`change your metamask wallet to ${tokeninfo.chainName}`);\r\n      console.log(`You are on the wrong chain, change to ${tokeninfo.chainName}`);\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nexport const loadContractFT = async (tokeninfo: any) => {\r\n  try {\r\n    if (tokeninfo.chainId === await window.web3.eth.getChainId()) {\r\n      const result = await new web3.eth.Contract(contractABIft() as any, tokeninfo.address);\r\n      window.transferBulkAbi = result;\r\n    }\r\n    else {\r\n      window.alert(`change your metamask wallet to ${tokeninfo.chainName}`);\r\n      console.log(`You are on the wrong chain, change to ${tokeninfo.chainName}`);\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst newChain = async () => {\r\n  let chainId = await window.web3.eth.getChainId();\r\n  let networkId = await window.web3.eth.net.getId();\r\n  console.log(`We are on chain: ${chainId} and network ${networkId}`)\r\n}\r\n\r\nconst newActs = async () => {\r\n  let acts = await web3.eth.getAccounts()\r\n  console.log(`We have accounts: ${JSON.stringify(acts)}`);\r\n}\r\n\r\nexport const selectChain = (param: any) => {\r\n  window.ethereum.request({ method: 'wallet_addEthereumChain', params: param });\r\n}","export const Header = () => {\r\n    return (\r\n      <header className=\"app-header\">\r\n        <h1>Transfer Titans</h1>\r\n      </header>\r\n    );\r\n  };","let transferlist: any = [];\r\nlet addresslist: any = [];\r\n\r\nexport const addElementsToList = async (addresses: string) => {\r\n  transferlist = [];\r\n  addresslist = [];\r\n  addresslist = addresses.split(',');\r\n  for (let i = 0; i < addresslist.length; i++) {\r\n    addresslist[i] = addresslist[i].trim();\r\n    console.log(addresslist[i])\r\n    if (addresslist[i].length !== 42) {\r\n      console.log(\"Removing item\" , addresslist[i], \"from index \", i);\r\n      addresslist.splice(i, 1);\r\n      i--;\r\n    }\r\n    else {\r\n      let entry = { \"address\": addresslist[i] }\r\n      transferlist.push(entry);\r\n    }\r\n  }\r\n}\r\n\r\nexport const getTransferList = async () => {\r\n  return transferlist;\r\n}\r\n\r\nexport const getAddressList = async () => {\r\n  return addresslist;\r\n}","import { getAddressList } from \"./HandleNftInputs\";\r\n\r\nexport const MintTokens = async () => {\r\n  let accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n  const addresses = await getAddressList();\r\n  console.log(addresses);\r\n  try {\r\n    await window.mintBulkAbi.methods.mintBulk(addresses).send({ from: accounts[0] });\r\n  }\r\n  catch (e) {\r\n    console.error(e);\r\n  }\r\n}","import React from \"react\";\r\nimport { LoadWeb3, selectChain, loadContractNFT } from \"../components/Web3\";\r\nimport { Header } from \"../components/Header\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { addElementsToList, getTransferList } from \"../components/HandleNftInputs\";\r\nimport { MintTokens } from \"../components/MintTokens\";\r\nimport chainInfo from \"../assets/static/chainInfo.json\";\r\nimport contractInfo from \"../assets/static/contractInfo.json\";\r\n\r\ndeclare global {\r\n  interface Window {\r\n    ethereum: any;\r\n    web3: any;\r\n    mintBulkAbi: any;\r\n  }\r\n}\r\n\r\nexport const Mintnonfungible = () => {\r\n  LoadWeb3();\r\n\r\n  const [valueaddresses, setAddressesValue] = React.useState('');\r\n  const [transferlist, showTransferList] = React.useState<any[]>([]);\r\n  const [chain, setChain] = React.useState('');\r\n  const [contract, setContract] = React.useState('');\r\n\r\n  const handleChainChange = (event: any) => {\r\n    setChain(event.target.value)\r\n    switch (event.target.value) {\r\n      case \"xDai\":\r\n        selectChain(chainInfo.paramxDai);\r\n        break;\r\n      case \"Fantom\":\r\n        selectChain(chainInfo.paramFantom);\r\n        break;\r\n      default:\r\n        console.log(\"Chain not found\");\r\n    }\r\n  };\r\n\r\n  const handleContractChange = (event: any) => {\r\n    setContract(event.target.value)\r\n    switch (event.target.value) {\r\n      case \"AttTestToken\":\r\n        loadContractNFT(contractInfo.koiosTestNFTAttendance);\r\n        break;\r\n      case \"PresTestToken\":\r\n        loadContractNFT(contractInfo.koiosTestNFTPresenter);\r\n        break;\r\n      case \"AttendeeToken\":\r\n        loadContractNFT(contractInfo.koiosAttendeeNFT);\r\n        break;\r\n      case \"PresenterToken\":\r\n        loadContractNFT(contractInfo.koiosPresenterNFT);\r\n        break;\r\n      default:\r\n        console.log(\"Contract not available\");\r\n    }\r\n  };\r\n\r\n  const handleAddressesChange = (event: any) => {\r\n    setAddressesValue(event.target.value);\r\n  };\r\n\r\n  const updateTransferList = async () => {\r\n    const updatedTransferList = await getTransferList();\r\n    showTransferList(updatedTransferList);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n  });\r\n\r\n  const handleSubmitButton = async () => {\r\n    await addElementsToList(valueaddresses);\r\n    updateTransferList();\r\n  }\r\n\r\n  return (\r\n    <section className=\"mintnonfungible\">\r\n      <section className=\"chain-contract-selection\">\r\n        <div className=\"chain-contract-selection__select\">\r\n          <FormControl variant=\"outlined\" className=\"chain-contract-selection__select-chain-dropdown\">\r\n            <InputLabel>Chain</InputLabel>\r\n            <Select\r\n              value={chain}\r\n              onChange={handleChainChange}\r\n              label=\"Chain\"\r\n            >\r\n              <MenuItem value={\"Rinkeby\"}>Rinkeby</MenuItem>\r\n              <MenuItem value={\"xDai\"}>xDai</MenuItem>\r\n              <MenuItem value={\"Fantom\"}>Fantom</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <FormControl variant=\"outlined\" className=\"chain-contract-selection__select-contract-dropdown\">\r\n            <InputLabel>Contract</InputLabel>\r\n            <Select\r\n              value={contract}\r\n              onChange={handleContractChange}\r\n              label=\"Contract\"\r\n            >\r\n              <MenuItem value={\"AttTestToken\"}>Attendance Test Token</MenuItem>\r\n              <MenuItem value={\"PresTestToken\"}>Presenter Test Token</MenuItem>\r\n              <MenuItem value={\"AttendeeToken\"}>Attendance Token xDai</MenuItem>\r\n              <MenuItem value={\"PresenterToken\"}>Presenter Token xDai</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n      </section>\r\n      <section className=\"token-section\">\r\n        <Header />\r\n        <div className=\"token-section__inputs\">\r\n          <TextField className=\"token-section__addresses\"\r\n            label=\"Addresses\"\r\n            value={valueaddresses}\r\n            onChange={handleAddressesChange}\r\n            variant=\"outlined\"\r\n            fullWidth />\r\n          <button\r\n            className=\"token-section__submit-button\"\r\n            onClick={() => handleSubmitButton()}\r\n          >\r\n            Submit\r\n          </button>\r\n          <button\r\n            className=\"token-section__mint-button\"\r\n            onClick={() => MintTokens()}\r\n          >\r\n            Mint Tokens\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"token-section__transferlist\">\r\n          <table className=\"token-section__transferlisttable\">\r\n            <thead>\r\n              <tr>\r\n                <th>Address</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {transferlist.map((users: any, index: any) => {\r\n                return (\r\n                  <tr key={index}>\r\n                    <td>{users.address}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </section>\r\n    </section>\r\n  );\r\n}","let transferlist: any = [];\r\nlet addresslist: any = [];\r\nlet amountlist: any = [];\r\n\r\nexport const addElementsToList = async (names: string, addresses: string, amount:string) => {\r\n  transferlist = [];\r\n  addresslist = [];\r\n  addresslist = addresses.split(',');\r\n  amountlist = amount.split(',');\r\n  console.log(addresslist);\r\n  for (let i = 0; i < addresslist.length; i++) {\r\n    addresslist[i] = addresslist[i].trim();\r\n    amountlist[i] = amountlist[i].trim();\r\n    if (addresslist[i].length !== 42 || amountlist[i] === '0') {\r\n      console.log(\"Removing item\" , addresslist[i], \"from index \", i);\r\n      addresslist.splice(i, 1);\r\n      console.log(\"Removing item\" , amountlist[i], \"from index \", i);\r\n      amountlist.splice(i, 1);\r\n      i--;\r\n    }\r\n    else {\r\n      let entry = { \"address\": addresslist[i], \"amount\": amountlist[i] }\r\n      transferlist.push(entry);\r\n    }\r\n  }\r\n}\r\n\r\nexport const getTransferList = async () => {\r\n  return transferlist;\r\n}\r\n\r\nexport const getAddressList = async () => {\r\n  return addresslist;\r\n}\r\n\r\nexport const getAmountList = async () => {\r\n  return amountlist;\r\n}\r\n","import { getAddressList, getAmountList } from \"./HandleFtInputs\";\r\n\r\nexport const TransferTokens = async () => {\r\n  let accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n  const addresses = await getAddressList();\r\n  let amounts = await getAmountList();\r\n  for (var i = 0; i < amounts.length; i++) {\r\n    amounts[i] = BigInt(parseInt(amounts[i]) * (10 ** 18));\r\n  }\r\n  console.log(addresses);\r\n  try {\r\n    await window.transferBulkAbi.methods.transferBulk(addresses, amounts).send({ from: accounts[0] });\r\n  }\r\n  catch (e) {\r\n    console.error(e);\r\n  }\r\n}","import React from \"react\";\r\nimport { LoadWeb3, loadContractFT } from \"../components/Web3\";\r\nimport { Header } from \"../components/Header\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { addElementsToList, getTransferList } from \"../components/HandleFtInputs\";\r\nimport { TransferTokens } from \"../components/TransferTokens\";\r\nimport contractInfo from \"../assets/static/contractInfo.json\";\r\n\r\ndeclare global {\r\n  interface Window {\r\n    ethereum: any;\r\n    web3: any;\r\n    transferBulkAbi: any;\r\n  }\r\n}\r\n\r\nexport const TransferFungibleRinkeby = () => {\r\n  LoadWeb3();\r\n\r\n  const [valuenames, setNamesValue] = React.useState('');\r\n  const [valueaddresses, setAddressesValue] = React.useState('');\r\n  const [valueamount, setAmountValue] = React.useState('');\r\n  const [transferlist, showTransferList] = React.useState<any[]>([]);\r\n  const [token, setToken] = React.useState('');\r\n\r\n  const handleContractChange = (event: any) => {\r\n    setToken(event.target.value)\r\n    switch (event.target.value) {\r\n      case \"TitanToken\":\r\n        loadContractFT(contractInfo.TitanToken);\r\n        break;\r\n      case \"T1tanToken\":\r\n        loadContractFT(contractInfo.T1tanToken);\r\n        break;\r\n      default:\r\n        console.log(\"Contract not available\");\r\n    }\r\n  };\r\n\r\n  const handleNamesChange = (event: any) => {\r\n    setNamesValue(event.target.value);\r\n  };\r\n\r\n  const handleAddressesChange = (event: any) => {\r\n    setAddressesValue(event.target.value);\r\n  };\r\n\r\n  const handleAmountChange = (event: any) => {\r\n    setAmountValue(event.target.value);\r\n  };\r\n\r\n  const updateTransferList = async () => {\r\n    const updatedTransferList = await getTransferList();\r\n    showTransferList(updatedTransferList);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n  });\r\n\r\n  const handleSubmitButton = async () => {\r\n    await addElementsToList(valuenames, valueaddresses, valueamount);\r\n    updateTransferList();\r\n  }\r\n\r\n  return (\r\n    <section className=\"transferfungible\">\r\n      <section className=\"token-selection\">\r\n        <div className=\"token-selection__select\">\r\n          <FormControl variant=\"outlined\" className=\"token-selection__select-token-dropdown\">\r\n            <InputLabel>Contract</InputLabel>\r\n            <Select\r\n              value={token}\r\n              onChange={handleContractChange}\r\n              label=\"Token\"\r\n            >\r\n              <MenuItem value={\"TitanToken\"}>Titan Token</MenuItem>\r\n              <MenuItem value={\"T1tanToken\"}>T1tan Token</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n      </section>\r\n      <section className=\"fungibletoken-section\">\r\n        <Header />\r\n        <div className=\"fungibletoken-section__inputs\">\r\n          <TextField className=\"fungibletoken-section__names\"\r\n            label=\"Names (optional)\"\r\n            value={valuenames}\r\n            onChange={handleNamesChange}\r\n            variant=\"outlined\"\r\n            fullWidth />\r\n          <TextField className=\"fungibletoken-section__addresses\"\r\n            label=\"Addresses\"\r\n            value={valueaddresses}\r\n            onChange={handleAddressesChange}\r\n            variant=\"outlined\"\r\n            fullWidth />\r\n          <TextField className=\"fungibletoken-section__amount\"\r\n            label=\"Amount\"\r\n            value={valueamount}\r\n            onChange={handleAmountChange}\r\n            variant=\"outlined\"\r\n            fullWidth />\r\n          <button\r\n            className=\"fungibletoken-section__submit-button\"\r\n            onClick={() => handleSubmitButton()}\r\n          >\r\n            Submit\r\n          </button>\r\n          <button\r\n            className=\"fungibletoken-section__mint-button\"\r\n            onClick={() => TransferTokens()}\r\n          >\r\n            Transfer Tokens\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"token-section__transferlist\">\r\n          <table className=\"token-section__transferlisttable\">\r\n            <thead>\r\n              <tr>\r\n                <th>Address</th>\r\n                <th>Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {transferlist.map((users: any, index: any) => {\r\n                return (\r\n                  <tr key={index}>\r\n                    <td>{users.address}</td>\r\n                    <td>{users.amount}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </section>\r\n    </section>\r\n  );\r\n}","import React from \"react\";\r\nimport { LoadWeb3, loadContractFT } from \"../components/Web3\";\r\nimport { Header } from \"../components/Header\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { addElementsToList, getTransferList } from \"../components/HandleFtInputs\";\r\nimport { TransferTokens } from \"../components/TransferTokens\";\r\nimport contractInfo from \"../assets/static/contractInfo.json\";\r\n\r\ndeclare global {\r\n  interface Window {\r\n    ethereum: any;\r\n    web3: any;\r\n    transferBulkAbi: any;\r\n  }\r\n}\r\n\r\nexport const TransferFungibleArbitrum = () => {\r\n  LoadWeb3();\r\n\r\n  const [valuenames, setNamesValue] = React.useState('');\r\n  const [valueaddresses, setAddressesValue] = React.useState('');\r\n  const [valueamount, setAmountValue] = React.useState('');\r\n  const [transferlist, showTransferList] = React.useState<any[]>([]);\r\n\r\n  loadContractFT(contractInfo.KoiosTitanToken);\r\n\r\n  const handleNamesChange = (event: any) => {\r\n    setNamesValue(event.target.value);\r\n  };\r\n\r\n  const handleAddressesChange = (event: any) => {\r\n    setAddressesValue(event.target.value);\r\n  };\r\n\r\n  const handleAmountChange = (event: any) => {\r\n    setAmountValue(event.target.value);\r\n  };\r\n\r\n  const updateTransferList = async () => {\r\n    const updatedTransferList = await getTransferList();\r\n    showTransferList(updatedTransferList);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n  });\r\n\r\n  const handleSubmitButton = async () => {\r\n    await addElementsToList(valuenames, valueaddresses, valueamount);\r\n    updateTransferList();\r\n  }\r\n\r\n  return (\r\n    <section className=\"transferfungible\">\r\n      <section className=\"fungibletoken-section\">\r\n        <Header />\r\n        <div className=\"fungibletoken-section__inputs\">\r\n          <TextField className=\"fungibletoken-section__names\"\r\n            label=\"Names (optional)\"\r\n            value={valuenames}\r\n            onChange={handleNamesChange}\r\n            variant=\"outlined\"\r\n            fullWidth />\r\n          <TextField className=\"fungibletoken-section__addresses\"\r\n            label=\"Addresses\"\r\n            value={valueaddresses}\r\n            onChange={handleAddressesChange}\r\n            variant=\"outlined\"\r\n            fullWidth />\r\n          <TextField className=\"fungibletoken-section__amount\"\r\n            label=\"Amount\"\r\n            value={valueamount}\r\n            onChange={handleAmountChange}\r\n            variant=\"outlined\"\r\n            fullWidth />\r\n          <button\r\n            className=\"fungibletoken-section__submit-button\"\r\n            onClick={() => handleSubmitButton()}\r\n          >\r\n            Submit\r\n          </button>\r\n          <button\r\n            className=\"fungibletoken-section__mint-button\"\r\n            onClick={() => TransferTokens()}\r\n          >\r\n            Transfer Tokens\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"token-section__transferlist\">\r\n          <table className=\"token-section__transferlisttable\">\r\n            <thead>\r\n              <tr>\r\n                <th>Address</th>\r\n                <th>Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {transferlist.map((users: any, index: any) => {\r\n                return (\r\n                  <tr key={index}>\r\n                    <td>{users.address}</td>\r\n                    <td>{users.amount}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </section>\r\n    </section>\r\n  );\r\n}","import { Route, HashRouter as Router, Switch } from \"react-router-dom\";\r\nimport { Home } from \"./pages/Home\";\r\nimport { Mintnonfungible } from \"./pages/Mintnonfungible\";\r\nimport { TransferFungibleRinkeby } from \"./pages/TransferfungibleRinkeby\";\r\nimport { TransferFungibleArbitrum } from \"./pages/TransferFungibleDao\";\r\n\r\n\r\nexport const App = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home}></Route>\r\n        <Route path=\"/mintnonfungible\" exact component={Mintnonfungible}></Route>\r\n        <Route path=\"/transferfungibleminor\" exact component={TransferFungibleRinkeby}></Route>\r\n        <Route path=\"/transferfungibledao\" exact component={TransferFungibleArbitrum}></Route>\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport \"./assets/css/import.scss\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}