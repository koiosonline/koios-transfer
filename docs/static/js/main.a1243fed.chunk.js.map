{"version":3,"sources":["pages/Home.tsx","components/Web3.ts","components/Header.tsx","components/HandleNftInputs.ts","components/MintTokens.ts","pages/Mintnonfungible.tsx","components/MintBadges.ts","pages/MintKoiosBadges.tsx","components/HandleFtInputs.ts","components/TransferTokens.ts","pages/TransferfungibleRinkeby.tsx","pages/TransferFungibleDao.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Home","to","web3","Web3","givenProvider","LoadWeb3","a","window","ethereum","newChain","newActs","on","autoRefreshOnNetworkChange","alert","loadContractBadges","tokeninfo","chainId","eth","getChainId","Contract","mintBadgesAbi","address","result","chainName","console","log","loadContractNFT","mintBulkAbi","loadContractFT","transferBulkAbi","net","getId","networkId","getAccounts","acts","JSON","stringify","selectChain","param","request","method","params","Header","className","transferlist","addresslist","addElementsToList","addresses","split","i","length","trim","splice","entry","push","getTransferList","getAddressList","MintTokens","accounts","methods","mintBulk","send","from","error","Mintnonfungible","React","useState","valueaddresses","setAddressesValue","showTransferList","chain","setChain","contract","setContract","updateTransferList","updatedTransferList","useEffect","handleSubmitButton","FormControl","variant","InputLabel","Select","value","onChange","event","target","chainInfo","paramRinkeby","paramxDai","paramFantom","label","MenuItem","contractInfo","koiosTestNFTAttendance","koiosTestNFTPresenter","koiosAttendeeNFT","koiosPresenterNFT","TextField","fullWidth","onClick","map","users","index","MintBadges","badgeID","MintKoiosBadges","valueID","setIdValue","KoiosTestBadges","amountlist","names","amount","getAmountList","TransferTokens","amounts","BigInt","parseInt","transferBulk","TransferFungibleRinkeby","valuenames","setNamesValue","valueamount","setAmountValue","token","setToken","TitanToken","T1tanToken","TransferFungibleArbitrum","KoiosTitanToken","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1243fed.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\r\n\r\nexport const Home = () => {\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h2>Koios</h2>\r\n      <Link to=\"/mintnonfungible\">Mint non fungible token</Link>\r\n      <p></p>\r\n      <Link to=\"/mintbadges\">Mint Koios Badges</Link>\r\n      <p></p>\r\n      <Link to=\"/transferfungibleminor\">Transfer Minor Titan tokens</Link>\r\n      <p></p>\r\n      <Link to=\"/transferfungibledao\">Transfer Koios Dao tokens</Link>\r\n    </div>\r\n  );\r\n}","import Web3 from \"web3\";\r\nimport mintBulkAbi from \"../assets/static/mintBulk-abi.json\";\r\nimport mintBadgesAbi from \"../assets/static/mintBulkBadges-abi.json\";\r\nimport transferBulkAbi from \"../assets/static/transferBulk-abi.json\";\r\nconst web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\r\n\r\nexport const LoadWeb3 = async () => {\r\n  if (window.ethereum) {\r\n    window.web3 = new Web3(window.ethereum);\r\n\r\n    await newChain();\r\n    await newActs();\r\n\r\n    window.ethereum.on('accountsChanged', newActs)\r\n    window.ethereum.on('chainChanged', newChain);\r\n    window.ethereum.on('networkChanged', newChain);  // depricated / still used in metamask mobile\r\n    window.ethereum.on('chainIdChanged', newChain);  // depricated / temp workaround\r\n    window.ethereum.autoRefreshOnNetworkChange = false; // temp workaround  // doesn't work on metamask mobile\r\n\r\n  } else {\r\n    window.alert(\"Metamask not detected!\");\r\n  }\r\n};\r\n\r\nconst contractABInft = () => {\r\n  const abi = mintBulkAbi;\r\n  return abi;\r\n};\r\n\r\nconst contractABIbadges = () => {\r\n  const abi = mintBadgesAbi;\r\n  return abi;\r\n};\r\n\r\nconst contractABIft = () => {\r\n  const abi = transferBulkAbi;\r\n  return abi;\r\n};\r\n\r\nexport const loadContractBadges = async (tokeninfo: any) => {\r\n  try {\r\n    if (tokeninfo.chainId === await window.web3.eth.getChainId()) {\r\n      const result = await new web3.eth.Contract(contractABIbadges() as any, tokeninfo.address);\r\n      window.mintBadgesAbi = result;\r\n    }\r\n    else {\r\n      window.alert(`change your metamask wallet to ${tokeninfo.chainName}`);\r\n      console.log(`You are on the wrong chain, change to ${tokeninfo.chainName}`);\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nexport const loadContractNFT = async (tokeninfo: any) => {\r\n  try {\r\n    if (tokeninfo.chainId === await window.web3.eth.getChainId()) {\r\n      const result = await new web3.eth.Contract(contractABInft() as any, tokeninfo.address);\r\n      window.mintBulkAbi = result;\r\n    }\r\n    else {\r\n      window.alert(`change your metamask wallet to ${tokeninfo.chainName}`);\r\n      console.log(`You are on the wrong chain, change to ${tokeninfo.chainName}`);\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nexport const loadContractFT = async (tokeninfo: any) => {\r\n  try {\r\n    if (tokeninfo.chainId === await window.web3.eth.getChainId()) {\r\n      const result = await new web3.eth.Contract(contractABIft() as any, tokeninfo.address);\r\n      window.transferBulkAbi = result;\r\n    }\r\n    else {\r\n      window.alert(`change your metamask wallet to ${tokeninfo.chainName}`);\r\n      console.log(`You are on the wrong chain, change to ${tokeninfo.chainName}`);\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst newChain = async () => {\r\n  let chainId = await window.web3.eth.getChainId();\r\n  let networkId = await window.web3.eth.net.getId();\r\n  console.log(`We are on chain: ${chainId} and network ${networkId}`)\r\n}\r\n\r\nconst newActs = async () => {\r\n  let acts = await web3.eth.getAccounts()\r\n  console.log(`We have accounts: ${JSON.stringify(acts)}`);\r\n}\r\n\r\nexport const selectChain = (param: any) => {\r\n  window.ethereum.request({ method: 'wallet_addEthereumChain', params: param });\r\n}","export const Header = () => {\r\n    return (\r\n      <header className=\"app-header\">\r\n        <h1>Transfer Titans</h1>\r\n      </header>\r\n    );\r\n  };","let transferlist: any = [];\r\nlet addresslist: any = [];\r\n\r\nexport const addElementsToList = async (addresses: string) => {\r\n  transferlist = [];\r\n  addresslist = [];\r\n  addresslist = addresses.split(',');\r\n  for (let i = 0; i < addresslist.length; i++) {\r\n    addresslist[i] = addresslist[i].trim();\r\n    console.log(addresslist[i])\r\n    if (addresslist[i].length !== 42) {\r\n      console.log(\"Removing item\" , addresslist[i], \"from index \", i);\r\n      addresslist.splice(i, 1);\r\n      i--;\r\n    }\r\n    else {\r\n      let entry = { \"address\": addresslist[i] }\r\n      transferlist.push(entry);\r\n    }\r\n  }\r\n}\r\n\r\nexport const getTransferList = async () => {\r\n  return transferlist;\r\n}\r\n\r\nexport const getAddressList = async () => {\r\n  return addresslist;\r\n}","import { getAddressList } from \"./HandleNftInputs\";\r\n\r\nexport const MintTokens = async () => {\r\n  let accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n  const addresses = await getAddressList();\r\n  console.log(addresses);\r\n  try {\r\n    await window.mintBulkAbi.methods.mintBulk(addresses).send({ from: accounts[0] });\r\n  }\r\n  catch (e) {\r\n    console.error(e);\r\n  }\r\n}","import React from \"react\";\r\nimport { LoadWeb3, selectChain, loadContractNFT } from \"../components/Web3\";\r\nimport { Header } from \"../components/Header\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { addElementsToList, getTransferList } from \"../components/HandleNftInputs\";\r\nimport { MintTokens } from \"../components/MintTokens\";\r\nimport chainInfo from \"../assets/static/chainInfo.json\";\r\nimport contractInfo from \"../assets/static/contractInfo.json\";\r\n\r\ndeclare global {\r\n  interface Window {\r\n    ethereum: any;\r\n    web3: any;\r\n    mintBulkAbi: any;\r\n  }\r\n}\r\n\r\nexport const Mintnonfungible = () => {\r\n  LoadWeb3();\r\n\r\n  const [valueaddresses, setAddressesValue] = React.useState('');\r\n  const [transferlist, showTransferList] = React.useState<any[]>([]);\r\n  const [chain, setChain] = React.useState('');\r\n  const [contract, setContract] = React.useState('');\r\n\r\n  const handleChainChange = (event: any) => {\r\n    setChain(event.target.value)\r\n    switch (event.target.value) {\r\n      case \"Rinkeby\":\r\n        selectChain(chainInfo.paramRinkeby);\r\n        break;\r\n      case \"xDai\":\r\n        selectChain(chainInfo.paramxDai);\r\n        break;\r\n      case \"Fantom\":\r\n        selectChain(chainInfo.paramFantom);\r\n        break;\r\n      default:\r\n        console.log(\"Chain not found\");\r\n    }\r\n  };\r\n\r\n  const handleContractChange = (event: any) => {\r\n    setContract(event.target.value)\r\n    switch (event.target.value) {\r\n      case \"AttTestToken\":\r\n        loadContractNFT(contractInfo.koiosTestNFTAttendance);\r\n        break;\r\n      case \"PresTestToken\":\r\n        loadContractNFT(contractInfo.koiosTestNFTPresenter);\r\n        break;\r\n      case \"AttendeeToken\":\r\n        loadContractNFT(contractInfo.koiosAttendeeNFT);\r\n        break;\r\n      case \"PresenterToken\":\r\n        loadContractNFT(contractInfo.koiosPresenterNFT);\r\n        break;\r\n      default:\r\n        console.log(\"Contract not available\");\r\n    }\r\n  };\r\n\r\n  const handleAddressesChange = (event: any) => {\r\n    setAddressesValue(event.target.value);\r\n  };\r\n\r\n  const updateTransferList = async () => {\r\n    const updatedTransferList = await getTransferList();\r\n    showTransferList(updatedTransferList);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n  });\r\n\r\n  const handleSubmitButton = async () => {\r\n    await addElementsToList(valueaddresses);\r\n    updateTransferList();\r\n  }\r\n\r\n  return (\r\n    <section className=\"mintnonfungible\">\r\n      <section className=\"chain-contract-selection\">\r\n        <div className=\"chain-contract-selection__select\">\r\n          <FormControl variant=\"outlined\" className=\"chain-contract-selection__select-chain-dropdown\">\r\n            <InputLabel>Chain</InputLabel>\r\n            <Select\r\n              value={chain}\r\n              onChange={handleChainChange}\r\n              label=\"Chain\"\r\n            >\r\n              <MenuItem value={\"Rinkeby\"}>Rinkeby</MenuItem>\r\n              <MenuItem value={\"xDai\"}>xDai</MenuItem>\r\n              <MenuItem value={\"Fantom\"}>Fantom</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <FormControl variant=\"outlined\" className=\"chain-contract-selection__select-contract-dropdown\">\r\n            <InputLabel>Contract</InputLabel>\r\n            <Select\r\n              value={contract}\r\n              onChange={handleContractChange}\r\n              label=\"Contract\"\r\n            >\r\n              <MenuItem value={\"AttTestToken\"}>Attendance Test Token</MenuItem>\r\n              <MenuItem value={\"PresTestToken\"}>Presenter Test Token</MenuItem>\r\n              <MenuItem value={\"AttendeeToken\"}>Attendance Token xDai</MenuItem>\r\n              <MenuItem value={\"PresenterToken\"}>Presenter Token xDai</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n      </section>\r\n      <section className=\"token-section\">\r\n        <Header />\r\n        <div className=\"token-section__inputs\">\r\n          <TextField className=\"token-section__addresses\"\r\n            label=\"Addresses\"\r\n            value={valueaddresses}\r\n            onChange={handleAddressesChange}\r\n            variant=\"outlined\"\r\n            fullWidth />\r\n          <button\r\n            className=\"token-section__submit-button\"\r\n            onClick={() => handleSubmitButton()}\r\n          >\r\n            Submit\r\n          </button>\r\n          <button\r\n            className=\"token-section__mint-button\"\r\n            onClick={() => MintTokens()}\r\n          >\r\n            Mint Tokens\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"token-section__transferlist\">\r\n          <table className=\"token-section__transferlisttable\">\r\n            <thead>\r\n              <tr>\r\n                <th>Address</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {transferlist.map((users: any, index: any) => {\r\n                return (\r\n                  <tr key={index}>\r\n                    <td>{users.address}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </section>\r\n    </section>\r\n  );\r\n}","import { getAddressList } from \"./HandleNftInputs\";\r\n\r\nexport const MintBadges = async (badgeID: any) => {\r\n  let accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n  const addresses = await getAddressList();\r\n  console.log(addresses);\r\n  try {\r\n    await window.mintBadgesAbi.methods.mintBulk(addresses,badgeID).send({ from: accounts[0] });\r\n  }\r\n  catch (e) {\r\n    console.error(e);\r\n  }\r\n}","import React from \"react\";\r\nimport { LoadWeb3, selectChain, loadContractBadges } from \"../components/Web3\";\r\nimport { Header } from \"../components/Header\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { addElementsToList, getTransferList } from \"../components/HandleNftInputs\";\r\nimport { MintBadges } from \"../components/MintBadges\";\r\nimport chainInfo from \"../assets/static/chainInfo.json\";\r\nimport contractInfo from \"../assets/static/contractInfo.json\";\r\n\r\ndeclare global {\r\n  interface Window {\r\n    ethereum: any;\r\n    web3: any;\r\n    mintBadgesAbi: any;\r\n  }\r\n}\r\n\r\nexport const MintKoiosBadges = () => {\r\n  LoadWeb3();\r\n\r\n  const [valueaddresses, setAddressesValue] = React.useState('');\r\n  const [valueID, setIdValue] = React.useState('');\r\n  const [transferlist, showTransferList] = React.useState<any[]>([]);\r\n  const [chain, setChain] = React.useState('');\r\n  const [contract, setContract] = React.useState('');\r\n\r\n  const handleChainChange = (event: any) => {\r\n    setChain(event.target.value)\r\n    switch (event.target.value) {\r\n      case \"Rinkeby\":\r\n        selectChain(chainInfo.paramRinkeby);\r\n        break;\r\n      default:\r\n        console.log(\"Chain not found\");\r\n    }\r\n  };\r\n\r\n  const handleContractChange = (event: any) => {\r\n    setContract(event.target.value)\r\n    switch (event.target.value) {\r\n      case \"KoiosTestBadges\":\r\n        loadContractBadges(contractInfo.KoiosTestBadges);\r\n        break;\r\n      default:\r\n        console.log(\"Contract not available\");\r\n    }\r\n  };\r\n\r\n  const handleAddressesChange = (event: any) => {\r\n    setAddressesValue(event.target.value);\r\n  };\r\n\r\n  const handleIdChange = (event: any) => {\r\n    setIdValue(event.target.value);\r\n  };\r\n\r\n  const updateTransferList = async () => {\r\n    const updatedTransferList = await getTransferList();\r\n    showTransferList(updatedTransferList);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n  });\r\n\r\n  const handleSubmitButton = async () => {\r\n    await addElementsToList(valueaddresses);\r\n    updateTransferList();\r\n  }\r\n\r\n  return (\r\n    <section className=\"mintnonfungible\">\r\n      <section className=\"chain-contract-selection\">\r\n        <div className=\"chain-contract-selection__select\">\r\n          <FormControl variant=\"outlined\" className=\"chain-contract-selection__select-chain-dropdown\">\r\n            <InputLabel>Chain</InputLabel>\r\n            <Select\r\n              value={chain}\r\n              onChange={handleChainChange}\r\n              label=\"Chain\"\r\n            >\r\n              <MenuItem value={\"Rinkeby\"}>Rinkeby</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <FormControl variant=\"outlined\" className=\"chain-contract-selection__select-contract-dropdown\">\r\n            <InputLabel>Contract</InputLabel>\r\n            <Select\r\n              value={contract}\r\n              onChange={handleContractChange}\r\n              label=\"Contract\"\r\n            >\r\n              <MenuItem value={\"KoiosTestBadges\"}>Koios Test Badge</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n      </section>\r\n      <section className=\"token-section\">\r\n        <Header />\r\n        <div className=\"token-section__inputs\">\r\n          <TextField className=\"token-section__addresses\"\r\n            label=\"Addresses\"\r\n            value={valueaddresses}\r\n            onChange={handleAddressesChange}\r\n            variant=\"outlined\"\r\n            fullWidth />\r\n          <TextField className=\"token-section__tokenid\"\r\n            label=\"tokenID\"\r\n            value={valueID}\r\n            onChange={handleIdChange}\r\n            variant=\"outlined\"\r\n            fullWidth />\r\n          <button\r\n            className=\"token-section__submit-button\"\r\n            onClick={() => handleSubmitButton()}\r\n          >\r\n            Submit\r\n          </button>\r\n          <button\r\n            className=\"token-section__mint-button\"\r\n            onClick={() => MintBadges(valueID)}\r\n          >\r\n            Mint Tokens\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"token-section__transferlist\">\r\n          <table className=\"token-section__transferlisttable\">\r\n            <thead>\r\n              <tr>\r\n                <th>Address</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {transferlist.map((users: any, index: any) => {\r\n                return (\r\n                  <tr key={index}>\r\n                    <td>{users.address}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </section>\r\n    </section>\r\n  );\r\n}","let transferlist: any = [];\r\nlet addresslist: any = [];\r\nlet amountlist: any = [];\r\n\r\nexport const addElementsToList = async (names: string, addresses: string, amount:string) => {\r\n  transferlist = [];\r\n  addresslist = [];\r\n  addresslist = addresses.split(',');\r\n  amountlist = amount.split(',');\r\n  console.log(addresslist);\r\n  for (let i = 0; i < addresslist.length; i++) {\r\n    addresslist[i] = addresslist[i].trim();\r\n    amountlist[i] = amountlist[i].trim();\r\n    if (addresslist[i].length !== 42 || amountlist[i] === '0') {\r\n      console.log(\"Removing item\" , addresslist[i], \"from index \", i);\r\n      addresslist.splice(i, 1);\r\n      console.log(\"Removing item\" , amountlist[i], \"from index \", i);\r\n      amountlist.splice(i, 1);\r\n      i--;\r\n    }\r\n    else {\r\n      let entry = { \"address\": addresslist[i], \"amount\": amountlist[i] }\r\n      transferlist.push(entry);\r\n    }\r\n  }\r\n}\r\n\r\nexport const getTransferList = async () => {\r\n  return transferlist;\r\n}\r\n\r\nexport const getAddressList = async () => {\r\n  return addresslist;\r\n}\r\n\r\nexport const getAmountList = async () => {\r\n  return amountlist;\r\n}\r\n","import { getAddressList, getAmountList } from \"./HandleFtInputs\";\r\n\r\nexport const TransferTokens = async () => {\r\n  let accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n  const addresses = await getAddressList();\r\n  let amounts = await getAmountList();\r\n  for (var i = 0; i < amounts.length; i++) {\r\n    amounts[i] = BigInt(parseInt(amounts[i]) * (10 ** 18));\r\n  }\r\n  console.log(addresses);\r\n  try {\r\n    await window.transferBulkAbi.methods.transferBulk(addresses, amounts).send({ from: accounts[0] });\r\n  }\r\n  catch (e) {\r\n    console.error(e);\r\n  }\r\n}","import React from \"react\";\r\nimport { LoadWeb3, loadContractFT } from \"../components/Web3\";\r\nimport { Header } from \"../components/Header\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { addElementsToList, getTransferList } from \"../components/HandleFtInputs\";\r\nimport { TransferTokens } from \"../components/TransferTokens\";\r\nimport contractInfo from \"../assets/static/contractInfo.json\";\r\n\r\ndeclare global {\r\n  interface Window {\r\n    ethereum: any;\r\n    web3: any;\r\n    transferBulkAbi: any;\r\n  }\r\n}\r\n\r\nexport const TransferFungibleRinkeby = () => {\r\n  LoadWeb3();\r\n\r\n  const [valuenames, setNamesValue] = React.useState('');\r\n  const [valueaddresses, setAddressesValue] = React.useState('');\r\n  const [valueamount, setAmountValue] = React.useState('');\r\n  const [transferlist, showTransferList] = React.useState<any[]>([]);\r\n  const [token, setToken] = React.useState('');\r\n\r\n  const handleContractChange = (event: any) => {\r\n    setToken(event.target.value)\r\n    switch (event.target.value) {\r\n      case \"TitanToken\":\r\n        loadContractFT(contractInfo.TitanToken);\r\n        break;\r\n      case \"T1tanToken\":\r\n        loadContractFT(contractInfo.T1tanToken);\r\n        break;\r\n      default:\r\n        console.log(\"Contract not available\");\r\n    }\r\n  };\r\n\r\n  const handleNamesChange = (event: any) => {\r\n    setNamesValue(event.target.value);\r\n  };\r\n\r\n  const handleAddressesChange = (event: any) => {\r\n    setAddressesValue(event.target.value);\r\n  };\r\n\r\n  const handleAmountChange = (event: any) => {\r\n    setAmountValue(event.target.value);\r\n  };\r\n\r\n  const updateTransferList = async () => {\r\n    const updatedTransferList = await getTransferList();\r\n    showTransferList(updatedTransferList);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n  });\r\n\r\n  const handleSubmitButton = async () => {\r\n    await addElementsToList(valuenames, valueaddresses, valueamount);\r\n    updateTransferList();\r\n  }\r\n\r\n  return (\r\n    <section className=\"transferfungible\">\r\n      <section className=\"token-selection\">\r\n        <div className=\"token-selection__select\">\r\n          <FormControl variant=\"outlined\" className=\"token-selection__select-token-dropdown\">\r\n            <InputLabel>Contract</InputLabel>\r\n            <Select\r\n              value={token}\r\n              onChange={handleContractChange}\r\n              label=\"Token\"\r\n            >\r\n              <MenuItem value={\"TitanToken\"}>Titan Token</MenuItem>\r\n              <MenuItem value={\"T1tanToken\"}>T1tan Token</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n      </section>\r\n      <section className=\"fungibletoken-section\">\r\n        <Header />\r\n        <div className=\"fungibletoken-section__inputs\">\r\n          <TextField className=\"fungibletoken-section__names\"\r\n            label=\"Names (optional)\"\r\n            value={valuenames}\r\n            onChange={handleNamesChange}\r\n            variant=\"outlined\"\r\n            fullWidth />\r\n          <TextField className=\"fungibletoken-section__addresses\"\r\n            label=\"Addresses\"\r\n            value={valueaddresses}\r\n            onChange={handleAddressesChange}\r\n            variant=\"outlined\"\r\n            fullWidth />\r\n          <TextField className=\"fungibletoken-section__amount\"\r\n            label=\"Amount\"\r\n            value={valueamount}\r\n            onChange={handleAmountChange}\r\n            variant=\"outlined\"\r\n            fullWidth />\r\n          <button\r\n            className=\"fungibletoken-section__submit-button\"\r\n            onClick={() => handleSubmitButton()}\r\n          >\r\n            Submit\r\n          </button>\r\n          <button\r\n            className=\"fungibletoken-section__mint-button\"\r\n            onClick={() => TransferTokens()}\r\n          >\r\n            Transfer Tokens\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"token-section__transferlist\">\r\n          <table className=\"token-section__transferlisttable\">\r\n            <thead>\r\n              <tr>\r\n                <th>Address</th>\r\n                <th>Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {transferlist.map((users: any, index: any) => {\r\n                return (\r\n                  <tr key={index}>\r\n                    <td>{users.address}</td>\r\n                    <td>{users.amount}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </section>\r\n    </section>\r\n  );\r\n}","import React from \"react\";\r\nimport { LoadWeb3, loadContractFT } from \"../components/Web3\";\r\nimport { Header } from \"../components/Header\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { addElementsToList, getTransferList } from \"../components/HandleFtInputs\";\r\nimport { TransferTokens } from \"../components/TransferTokens\";\r\nimport contractInfo from \"../assets/static/contractInfo.json\";\r\n\r\ndeclare global {\r\n  interface Window {\r\n    ethereum: any;\r\n    web3: any;\r\n    transferBulkAbi: any;\r\n  }\r\n}\r\n\r\nexport const TransferFungibleArbitrum = () => {\r\n  LoadWeb3();\r\n\r\n  const [valuenames, setNamesValue] = React.useState('');\r\n  const [valueaddresses, setAddressesValue] = React.useState('');\r\n  const [valueamount, setAmountValue] = React.useState('');\r\n  const [transferlist, showTransferList] = React.useState<any[]>([]);\r\n\r\n  loadContractFT(contractInfo.KoiosTitanToken);\r\n\r\n  const handleNamesChange = (event: any) => {\r\n    setNamesValue(event.target.value);\r\n  };\r\n\r\n  const handleAddressesChange = (event: any) => {\r\n    setAddressesValue(event.target.value);\r\n  };\r\n\r\n  const handleAmountChange = (event: any) => {\r\n    setAmountValue(event.target.value);\r\n  };\r\n\r\n  const updateTransferList = async () => {\r\n    const updatedTransferList = await getTransferList();\r\n    showTransferList(updatedTransferList);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n  });\r\n\r\n  const handleSubmitButton = async () => {\r\n    await addElementsToList(valuenames, valueaddresses, valueamount);\r\n    updateTransferList();\r\n  }\r\n\r\n  return (\r\n    <section className=\"transferfungible\">\r\n      <section className=\"fungibletoken-section\">\r\n        <Header />\r\n        <div className=\"fungibletoken-section__inputs\">\r\n          <TextField className=\"fungibletoken-section__names\"\r\n            label=\"Names (optional)\"\r\n            value={valuenames}\r\n            onChange={handleNamesChange}\r\n            variant=\"outlined\"\r\n            fullWidth />\r\n          <TextField className=\"fungibletoken-section__addresses\"\r\n            label=\"Addresses\"\r\n            value={valueaddresses}\r\n            onChange={handleAddressesChange}\r\n            variant=\"outlined\"\r\n            fullWidth />\r\n          <TextField className=\"fungibletoken-section__amount\"\r\n            label=\"Amount\"\r\n            value={valueamount}\r\n            onChange={handleAmountChange}\r\n            variant=\"outlined\"\r\n            fullWidth />\r\n          <button\r\n            className=\"fungibletoken-section__submit-button\"\r\n            onClick={() => handleSubmitButton()}\r\n          >\r\n            Submit\r\n          </button>\r\n          <button\r\n            className=\"fungibletoken-section__mint-button\"\r\n            onClick={() => TransferTokens()}\r\n          >\r\n            Transfer Tokens\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"token-section__transferlist\">\r\n          <table className=\"token-section__transferlisttable\">\r\n            <thead>\r\n              <tr>\r\n                <th>Address</th>\r\n                <th>Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {transferlist.map((users: any, index: any) => {\r\n                return (\r\n                  <tr key={index}>\r\n                    <td>{users.address}</td>\r\n                    <td>{users.amount}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </section>\r\n    </section>\r\n  );\r\n}","import { Route, HashRouter as Router, Switch } from \"react-router-dom\";\r\nimport { Home } from \"./pages/Home\";\r\nimport { Mintnonfungible } from \"./pages/Mintnonfungible\";\r\nimport { MintKoiosBadges } from \"./pages/MintKoiosBadges\";\r\nimport { TransferFungibleRinkeby } from \"./pages/TransferfungibleRinkeby\";\r\nimport { TransferFungibleArbitrum } from \"./pages/TransferFungibleDao\";\r\n\r\n\r\nexport const App = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home}></Route>\r\n        <Route path=\"/mintnonfungible\" exact component={Mintnonfungible}></Route>\r\n        <Route path=\"/mintbadges\" exact component={MintKoiosBadges}></Route>\r\n        <Route path=\"/transferfungibleminor\" exact component={TransferFungibleRinkeby}></Route>\r\n        <Route path=\"/transferfungibledao\" exact component={TransferFungibleArbitrum}></Route>\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport \"./assets/css/import.scss\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}