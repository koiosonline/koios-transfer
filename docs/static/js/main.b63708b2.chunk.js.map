{"version":3,"sources":["components/LoadWeb3.ts","components/Header.tsx","components/HandleInputs.ts","components/MintTokens.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["web3","Web3","givenProvider","LoadWeb3","a","window","ethereum","eth","getChainId","alert","loadContract","Contract","mintBulkAbi","result","console","log","Header","className","transferlist","addresslist","addElementsToList","names","addresses","split","i","length","trim","splice","entry","push","getTransferList","getAddressList","MintTokens","request","method","accounts","methods","mintBulk","send","from","error","App","React","useState","valuenames","valueaddresses","setAddressesValue","showTransferList","updateTransferList","updatedTransferList","useEffect","handleSubmitButton","TextField","label","value","onChange","event","target","variant","fullWidth","onClick","map","users","index","address","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b63708b2.chunk.js","sourcesContent":["import Web3 from \"web3\";\r\nimport mintBulkAbi from \"../assets/static/mintBulk-abi.json\";\r\nconst contractAddress = \"0x14AfcB62AC5b2BcB7329968e51c0F9571eB4c84C\"; // Rinkeby\r\nconst web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\r\n\r\nexport const LoadWeb3 = async () => {\r\n  if (window.ethereum) {\r\n    window.web3 = new Web3(window.ethereum);\r\n    if (await window.web3.eth.getChainId() !== 4) {\r\n      window.alert(\"Wrong chain\");\r\n    }\r\n    await loadContract();\r\n  } else {\r\n    window.alert(\"Metamask not detected!\");\r\n  }\r\n};\r\n\r\nconst contractABI = () => {\r\n  const abi = mintBulkAbi;\r\n  return abi;\r\n};\r\n\r\nconst loadContract = async () => {\r\n  try {\r\n    const result = await new web3.eth.Contract(contractABI() as any, contractAddress);\r\n    window.mintBulkAbi = result;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};","export const Header = () => {\r\n    return (\r\n      <header className=\"app-header\">\r\n        <h1>Transfer Titans</h1>\r\n      </header>\r\n    );\r\n  };","let transferlist: any = [];\r\nlet addresslist: any = [];\r\n\r\nexport const addElementsToList = async (names: string, addresses: string) => {\r\n  transferlist = [];\r\n  addresslist = [];\r\n  addresslist = addresses.split(',');\r\n  console.log(addresslist);\r\n  for (let i = 0; i < addresslist.length; i++) {\r\n    addresslist[i] = addresslist[i].trim();\r\n    console.log(addresslist[i])\r\n    if (addresslist[i].length !== 42) {\r\n      console.log(\"Removing item\" , addresslist[i], \"from index \", i);\r\n      addresslist.splice(i, 1);\r\n      i--;\r\n    }\r\n    else {\r\n      let entry = { \"address\": addresslist[i] }\r\n      transferlist.push(entry);\r\n    }\r\n  }\r\n}\r\n\r\nexport const getTransferList = async () => {\r\n  return transferlist;\r\n}\r\n\r\nexport const getAddressList = async () => {\r\n  return addresslist;\r\n}","import { getAddressList } from \"./HandleInputs\";\r\n\r\nexport const MintTokens = async () => {\r\n  let accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n  const addresses = await getAddressList();\r\n  console.log(addresses);\r\n  try {\r\n    await window.mintBulkAbi.methods.mintBulk(addresses).send({ from: accounts[0] });\r\n  }\r\n  catch (e) {\r\n    console.error(e);\r\n  }\r\n}","import React from \"react\";\nimport { LoadWeb3 } from \"./components/LoadWeb3\";\nimport { Header } from \"./components/Header\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { addElementsToList, getTransferList } from \"./components/HandleInputs\";\nimport { MintTokens } from \"./components/MintTokens\"\n\ndeclare global {\n  interface Window {\n    ethereum: any;\n    web3: any;\n    mintBulkAbi: any;\n  }\n}\n\nexport const App = () => {\n  LoadWeb3();\n\n  const [valuenames, setNamesValue] = React.useState('');\n  const [valueaddresses, setAddressesValue] = React.useState('');\n  const [transferlist, showTransferList] = React.useState<any[]>([]);\n\n  const handleNamesChange = (event: any) => {\n    setNamesValue(event.target.value);\n  };\n\n  const handleAddressesChange = (event: any) => {\n    setAddressesValue(event.target.value);\n  };\n\n  const updateTransferList = async () => {\n    const updatedTransferList = await getTransferList();\n    showTransferList(updatedTransferList);\n  }\n\n  React.useEffect(() => {\n  });\n\n  const handleSubmitButton = async () => {\n    await addElementsToList(valuenames, valueaddresses);\n    updateTransferList();\n  }\n\n  return (\n    <section className=\"home\">\n      <section className=\"token-section\">\n        <Header />\n        <div className=\"token-section__inputs\">\n          <TextField className=\"token-section__addresses\"\n            label=\"Addresses\"\n            value={valueaddresses}\n            onChange={handleAddressesChange}\n            variant=\"outlined\"\n            fullWidth />\n          <button\n            className=\"token-section__submit-button\"\n            onClick={() => handleSubmitButton()}\n          >\n            Submit\n          </button>\n          <button\n            className=\"token-section__mint-button\"\n            onClick={() => MintTokens()}\n          >\n            Mint Tokens\n          </button>\n        </div>\n\n        <div className=\"token-section__transferlist\">\n          <table className=\"token-section__transferlisttable\">\n            <thead>\n              <tr>\n                <th>Address</th>\n              </tr>\n            </thead>\n            <tbody>\n              {transferlist.map((users: any, index: any) => {\n                return (\n                  <tr key={index}>\n                    <td>{users.address}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </section>\n    </section>\n  );\n}\n\n/*\n<TextField className=\"token-section__names\"\n            label=\"Names\"\n            multiline\n            value={valuenames}\n            onChange={handleNamesChange}\n            variant=\"outlined\"\n            fullWidth />\n*/","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"./assets/css/import.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}